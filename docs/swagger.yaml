openapi: 3.0.0
info:
  title: Blogs API
  description: A RESTful API for a blogging platform built with Node.js, Express, Prisma, and PostgreSQL.
  version: 1.0.0
servers:
  - url: https://blogs-api-ncn3.onrender.com
paths:
  /api/auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid request format
  /api/auth/login:
    post:
      summary: Login and get JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: JWT token returned
        '401':
          description: Invalid credentials
  /api/auth/profile:
    get:
      summary: Get user profile (protected)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile retrieved
        '401':
          description: Unauthorized
  /api/posts:
    post:
      summary: Create a post (protected, image upload)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                image:
                  type: string
                  format: binary
      responses:
        '201':
          description: Post created successfully
        '401':
          description: Unauthorized
  /api/posts:
    get:
      summary: List all posts
      responses:
        '200':
          description: A list of posts
  /api/posts/{id}:
    get:
      summary: Get single post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Post retrieved
        '404':
          description: Post not found
    put:
      summary: Update post (protected)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
      responses:
        '200':
          description: Post updated successfully
        '401':
          description: Unauthorized
        '404':
          description: Post not found
    delete:
      summary: Delete post (protected)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Post deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Post not found
  /api/categories:
    post:
      summary: Create category (admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '201':
          description: Category created successfully
        '403':
          description: Forbidden
    get:
      summary: List categories
      responses:
        '200':
          description: A list of categories
  /api/categories/{id}:
    put:
      summary: Update category (admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Category updated successfully
        '403':
          description: Forbidden
        '404':
          description: Category not found
    delete:
      summary: Delete category (admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Category deleted successfully
        '403':
          description: Forbidden
        '404':
          description: Category not found
  /api/comments:
    post:
      summary: Create comment (protected)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                postId:
                  type: string
                content:
                  type: string
      responses:
        '201':
          description: Comment created successfully
        '401':
          description: Unauthorized
    get:
      summary: List comments (protected)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of comments
  /api/comments/{id}:
    put:
      summary: Update comment (protected)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
      responses:
        '200':
          description: Comment updated successfully
        '401':
          description: Unauthorized
        '404':
          description: Comment not found
    delete:
      summary: Delete comment (protected)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Comment deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Comment not found
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT